name: Format, test and push if needed

on: push

jobs:
  check-formatting:
    name: Check formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.20.0"

      - name: Test formatting
        run: |
          results="$(gofmt -s -l .)"

          if [[ -n "${results}" ]]; then
            echo "The following files are not formatted:"
            echo "${results}"
            exit 1
          fi

  test:
    name: Run tests
    runs-on: ${{ matrix.platform }}
    needs:
      - check-formatting

    strategy:
      fail-fast: false
      matrix:
        platform:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.20.0"

      - name: Test platform=${{ matrix.platform }}
        run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - test

    strategy:
      fail-fast: false
      matrix:
        goos:
          - linux
          - darwin
          - windows
          - freebsd
        goarch:
          - amd64
          - arm64
          - arm
        cmd:
          - scepclient
          - scepserver

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.20.0"

      - name: Build goos=${{ matrix.goos }} goarch=${{ matrix.goarch }} cmd=${{ matrix.cmd }}
        run: go build -v -ldflags "-X main.version=$(git describe --tags --always --dirty)" -o bin/${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/${{ matrix.cmd }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/${{ matrix.cmd }}-${{ matrix.goos }}-${{ matrix.goarch }}

  push-dockerhub:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - test

    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.20.0"

      - name: Push to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: micromdm/scep:${{ github.ref_name }}, micromdm/scep:latest

  push-github:
    name: Push to Github releases
    runs-on: ubuntu-latest
    needs:
      - build

    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: bin

      - name: Fix permissions
        run: chmod +x -R bin/**/*

      - name: Publish Github release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: bin/**/*
